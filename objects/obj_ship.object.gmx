<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setting up player
/*
*   Setting the various global variables of the ship  
*/

event_inherited();

thrust = 0.15;              // The normal thrust rate
maneuver_thrust = 0.025;    // The reverse thrusters.. thrust
boost_thrust = 0.3;         // The booster's thrust rate
turn = 5;                   // The rate of turn (higher = faster)

max_speed = 5;                         // Overall max speed
max_thrust_speed = 5;                  // Max speed of regular thrusters
max_maneuvering_thrust_speed = 10;    // Max speed of reverse thrusters
max_booster_speed = 10;                // Max speed of boosters

boosters_enabled = false;               // Flag for whether the boosters are being fired
maneuvering_thrusters_enabled = false;  // Flag for whether reverse thrusters are being fired
    maneuvering_lock = false;
    
action = 'Nothing';
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unlock maneuvering controls
show_debug_message("THRUST: Unlocking maneuvering thrusters");
manuvering_lock = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Processing player stuff
action = "Nothing";

if ( ( keyboard_check( ord('W') ) || keyboard_check( vk_up ) ) &amp;&amp; image_angle &lt; 90 )
{
    // Rotatin' left
    action = "Turning left";
    show_debug_message("Turning left");
    image_angle += turn;
}

if ( ( keyboard_check( ord('S') ) || keyboard_check( vk_down ) ) &amp;&amp; image_angle &gt; -90 )
{
    // Rotatin' right
    action = "Turning right";
    show_debug_message("Turning right");
    image_angle -= turn;
}

if ( keyboard_check( ord('W') ) || keyboard_check( vk_up ) || keyboard_check( ord('S') ) || keyboard_check( vk_down ) )
{
    // Calculate motion based on angle from 90 degrees
    ship_angle = image_angle;
    calculate_ship_speed();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Some nice visual output on what we're doing
draw_set_colour(c_white);
draw_text(10,10, "speed:     " + string(speed) + 
                "#direction: " + string(direction) +
                "#facing:    " + string(image_angle));
                
var spr_x = lengthdir_x(-50, image_angle);
var spr_y = lengthdir_y(-50, image_angle);
draw_text(175, 10, "action");
draw_text(175, 30, action);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
